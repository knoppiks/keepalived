name: CI

on:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ '*.*.*' ]
  pull_request:
    branches: [ "main" ]
  merge_group:

# Declare default permissions as read-only.
permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.ref || github.run_id }}
  cancel-in-progress: true

env:
  BUILD_ID: build-${{ github.run_id }}

jobs:
  prep:
    runs-on: ubuntu-24.04
    steps:
    - name: Check if Dockerhub is Enabled
      id: dockerhub
      if: github.event_name != 'pull_request'
      env:
        REPO: ${{ vars.DOCKERHUB_REPO }}
        USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
        TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      run: |
        if [ -z "${REPO:+x}" ] && [ -z "${USERNAME:+x}" ] && [ -z "${TOKEN:+x}" ]; then
          echo "No DockerHub config found in vars/secrets"
          echo "enabled=false" >>"${GITHUB_OUTPUT}"
        elif [ -z "${REPO:+x}" ] || [ -z "${USERNAME:+x}" ] || [ -z "${TOKEN:+x}" ]; then
          echo "Some DockerHub config is present, some missing. All of 'vars.DOCKERHUB_REPO', \
            'vars.DOCKERHUB_USERNAME' and 'secrets.DOCKERHUB_TOKEN' must be set." 
          exit 1
        else
          echo "enabled=true" >>"${GITHUB_OUTPUT}"
        fi

    - name: Generate Image Names
      id: images
      run: |
        echo "images=ghcr.io/${{ github.repository }} \
        ${{ steps.dockerhub.outputs.enabled && vars.DOCKERHUB_REPO || ''}}" >>"${GITHUB_OUTPUT}"

    - name: Check
      run: echo "${{ steps.images.outputs.images }}"
    outputs:
      dockerhub_enabled: ${{ steps.dockerhub.outputs.enabled }}
      images: ${{ steps.images.outputs.images }}

  build:
    runs-on: ubuntu-24.04
    permissions:
      packages: write
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
      with:
        egress-policy: audit

    - name: Checkout
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: Set up QEMU
      uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

    - name: Login to GHCR
      uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate Container Image Metadata
      id: meta
      uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
      with:
        images: ghcr.io/${{ github.repository }}

    - name: Build and Push Container Image
      id: push
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
      with:
        context: .
        platforms: linux/amd64,linux/arm/v7,linux/arm64
        push: true
        tags: ghcr.io/${{ github.repository }}:${{ env.BUILD_ID }}
        labels: ${{ steps.meta.outputs.labels }}
        annotations: ${{ steps.meta.outputs.annotations }}

    outputs:
      digest: ${{ steps.push.outputs.digest }}

  scan:
    needs: [ build ]
    runs-on: ubuntu-24.04
    permissions:
      security-events: write
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
      with:
        egress-policy: audit

    - name: Run Trivy Vulnerability Scanner
      uses: aquasecurity/trivy-action@76071ef0d7ec797419534a183b498b4d6366cf37 # 0.31.0
      with:
        image-ref: ghcr.io/${{ github.repository }}:${{ env.BUILD_ID }}
        format: sarif
        output: trivy-results.sarif
        severity: 'CRITICAL,HIGH'
        timeout: '15m0s'

    - name: Upload Trivy Scan Results to GitHub Security Tab
      uses: github/codeql-action/upload-sarif@3c3833e0f8c1c83d449a7478aa59c036a9165498 # v3.29.11
      with:
        sarif_file: trivy-results.sarif

    - name: Generate SBOM
      uses: aquasecurity/trivy-action@76071ef0d7ec797419534a183b498b4d6366cf37 # 0.31.0
      with:
        image-ref: ghcr.io/${{ github.repository }}:${{ env.BUILD_ID }}
        format: cyclonedx
        output: sbom.json
        scan-type: image

    - name: Upload Trivy SBOM
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: sbom
        path: sbom.json
        if-no-files-found: error
        retention-days: 7

  tag:
    if: github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork
    needs: [ prep, build, scan ]
    runs-on: ubuntu-24.04
    permissions:
      packages: write
    env:
      DIGEST: ${{ needs.build.outputs.digest }}

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
      with:
        egress-policy: audit

    - name: Install SLSA Verifier
      uses: slsa-framework/slsa-verifier/actions/installer@ea584f4502babc6f60d9bc799dbbb13c1caa9ee6 # v2.7.1

    - name: Install crane
      uses: iarekylew00t/crane-installer@632ea854299029baf74c3aa22e4fe5f9cb5d3337 # v3.1.10

    - name: Login to GHCR
      uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to DockerHub
      uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
      if: needs.prep.outputs.dockerhub_enabled
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Generate Container Image Metadata
      id: meta
      uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
      with:
        images: ${{ needs.prep.outputs.images }}
        tags: |
          type=ref,event=pr
          type=match,pattern=(\d+.\d+.\d+-k\d+)?,group=0
          type=match,pattern=(\d+.\d+.\d+)(-k\d+)?,group=1
          type=match,pattern=(\d+.\d+).\d+(-k\d+)?,group=1
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Retag and Push Container Image
      run: |
        while read -r tag; do
          crane tag "ghcr.io/${{ github.repository }}@${DIGEST}" "$(echo "${tag}" | cut -d: -f2)"
        done <<<"${{ steps.meta.outputs.tags }}"

  sign:
    # We need the tag job here, as the push must be done before signing
    needs: [ prep, build, scan, tag ]
    runs-on: ubuntu-24.04
    permissions:
      packages: write
      id-token: write
    env:
      DIGEST: ${{ needs.build.outputs.digest }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
      with:
        egress-policy: audit

    - name: Install cosign
      uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2

    - name: Download SBOM
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        name: sbom
        path: .

    - name: Login to GHCR
      uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to DockerHub
      uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
      if: needs.prep.outputs.dockerhub_enabled
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - run: echo "${{ needs.prep.outputs.images }}"

    - name: Sign Image
      run: |
        while read -r image; do
          cosign sign --yes "${image}@${{ env.DIGEST }}"
        done <<<"$(echo "${{ needs.prep.outputs.images }}" | xargs -n1)"

    - name: Attest Image SBOM
      run: |
        while read -r image; do
          cosign attest --yes --predicate "sbom.json" --type cyclonedx "${image}@${{ env.DIGEST }}"
        done <<<"$(echo "${{ needs.prep.outputs.images }}" | xargs -n1)"

  attest-ghcr:
    # We need the tag job here, as the push must be done before signing
    needs: [ build, tag ]
    permissions:
      actions: read # for detecting the GitHub Actions environment.
      id-token: write
      packages: write # for uploading attestations.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.1.0
    with:
      image: ghcr.io/${{ github.repository }}
      digest: ${{ needs.build.outputs.digest }}
      registry-username: ${{ github.repository_owner }}
    secrets:
      registry-password: ${{ secrets.GITHUB_TOKEN }}

  attest-dockerhub:
    # We need the tag job here, as the push must be done before signing
    needs: [ prep, build, tag ]
    permissions:
      actions: read # for detecting the GitHub Actions environment.
      id-token: write
      packages: write # for uploading attestations.
    if: needs.prep.outputs.dockerhub_enabled == 'true'
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.1.0
    with:
      image: ${{ vars.DOCKERHUB_REPO }}
      digest: ${{ needs.build.outputs.digest }}
      registry-username: ${{ vars.DOCKERHUB_USERNAME }}
    secrets:
      registry-password: ${{ secrets.DOCKERHUB_TOKEN }}

  publish-release:
    needs: [ attest-ghcr, attest-dockerhub, tag ]
    runs-on: ubuntu-24.04
    if: github.ref_type == 'tag'
    permissions:
      contents: write
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
      with:
        egress-policy: audit

    - name: Recognize Prerelease
      id: prerelease
      env:
        GITHUB_REF: ${{ github.ref_name }}
      # In SemVer 2.0, a prerelease version is always indicated by the presence of a hyphen
      # but the release version -k{number} is not a prerelease in our case
      run: |
        if [[ "${GITHUB_REF}" == *-* && "${GITHUB_REF}" != *-k+([0-9]) ]]; then
          echo "is-prerelease=true" >>"${GITHUB_OUTPUT}"
        fi

    - name: Release
      uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
      with:
        prerelease: ${{ steps.prerelease.outputs.is-prerelease }}
